# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches:
      - main
    types: [closed]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "release"
  release:
    name: Release
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v')

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      
      - name: Add Version Tag
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          TAG_NAME=$(echo "$HEAD_REF" | awk -F "/" '{ print $2 }')
          echo "TAG_NAME: $TAG_NAME"
          git tag ${TAG_NAME}
          PUSH_URL="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}"
          echo "PUSH_URL: $PUSH_URL"
          git push -u origin ${TAG_NAME}

      # Get version
      - name: Get the version
        id: get_version
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          VERSION_TAG=$(echo "$HEAD_REF" | awk -F "/" '{ print $2 }')
          echo ::set-output name=VERSION::${VERSION_TAG}

      # Get commit summary
      - name: Get commit summary
        id: get_commit_summary
        run: |
          PREVIOUS_TAG=$(git tag --sort=-creatordate | sed -n 2p)
          echo "PREVIOUS_TAG: $PREVIOUS_TAG"
          COMMIT_SUMMARY="$(git log --oneline --pretty=tformat:"%h %s" $PREVIOUS_TAG..${{ steps.get_version.outputs.VERSION }})"
          COMMIT_SUMMARY="${COMMIT_SUMMARY//$'\n'/'%0A'}"
          echo ::set-output name=COMMIT_SUMMARY::$COMMIT_SUMMARY

      # Create release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ${{ steps.get_commit_summary.outputs.COMMIT_SUMMARY }}
          draft: false
          prerelease: false
