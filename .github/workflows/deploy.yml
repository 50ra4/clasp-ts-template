# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  release:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    name: Deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      SCRIPT_ID: ${{ secrets.SCRIPT_ID }}
      DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}

    # node version
    strategy:
      matrix:
        node-version: ["14.16"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      # Setup node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Install npm packages
      - name: Install npm packages
        run: |
          npm install

      # Generate files for deploy clasp
      - name: Generate "~/.clasprc.json" & "~/.clasp.json"
        run: |
          npm run setup-clasp-files -- --CD

      # Deploy clasp
      - name: Deploy
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          npm run build
          npx clasp push -f
          VERSION=$(echo "$HEAD_REF" | awk -F "/" '{ print $2 }')
          npx clasp version "Release $VERSION"
          NEW_VERSION_ID=$(npx clasp versions | sed -n 2p | awk '{ print $1 }')
          npx clasp deploy -i $DEPLOYMENT_ID -V $NEW_VERSION_ID -d "Production"
